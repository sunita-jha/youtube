# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: ${{ parameters.Branch }}$(Rev:.r) 

parameters:
- name: Branch
  displayName: Branch to Deploy
  type: string
  default: master

pool:
  vmImage: ubuntu-latest
variables:
  # registry:  adipricerpocregistry.azurecr.io
  # DOCKER-REPOSITORY-NAME: importedimage
  # dockerfilePath: '**/Dockerfile'
  azureSubscription: 'sp-dev-jenkins'
  dockerRegistryServiceConnection: 'acr-adipricer-poc'
  containerappname: 'adi-poc-containerapp-two-acr'
  resourcegroupname: adi-eus-devops-poc-rg
  containername: adipricerpoc
  targetRegistry: adipricerpocregistry
  sourceRegistry: sunitademo
  targetRepo : importedimage
  sourceRepo : sunitajha2


steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'sp-dev-jenkins'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az acr import \
        --name $(targetRegistry) \
        --source $(sourceRegistry).azurecr.io/$(sourceRepo):10 \
        --image $(targetRepo):latest \
        --username $(username) \
        --password $(password)
# steps:
# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'sp-dev-jenkins'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       az config set extension.use_dynamic_install=yes_without_prompt
#       az containerapp update -n testapp1 -g adi-eus-devops-poc-rg \
#           --image sunitademo.azurecr.io/sunitajha2:11 \
#           --container-name directdeploy 
 